-- TRANSACTION: A database transaction is a single unit of work that consists of one or more operations e.g. of a transaction is a bank transfer from one account to another. A complete transaction must ensure a balance between the sender and receiver accounts.
-- This implies that if the sender account transfers X amount, the receiver receives exactly X amount, neither more nor less.

-- A PostgreSQL transaction is atomic, consistent, isolated, and durable. These properties are often referred to collectively as ACID:

-- Atomicity guarantees that the transaction is completed in an all-or-nothing manner.
-- Consistency ensures that changes to data written to the database are valid and adhere to predefined rules.
-- Isolation determines how the integrity of a transaction is visible to other transactions.
-- Durability ensures that transactions that have been committed are permanently stored in the database.

DROP TABLE IF EXISTS accounts;

CREATE TABLE accounts (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    balance DEC(15,2) NOT NULL CHECK(balance >= 0),
    PRIMARY KEY(id)
);

INSERT INTO accounts(name,balance) VALUES('Bob',10000);

select * from accounts;

-- For example, the following statements start a new transaction and insert a new account into the accounts table:

BEGIN;

INSERT INTO accounts(name,balance)
VALUES('Alice',10000);

COMMIT; -- or, END and to discard this query ROLLBACK

select * from accounts;